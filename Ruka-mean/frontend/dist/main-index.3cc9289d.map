{"version":3,"sources":["main-index.js"],"names":["Ruka_off","turn_led_on","turn_led_off","get_data_from_api","RukaOn","$","css","get_Ruka_isOn","feedback","ajax","type","url","success","dataResult","fadeOut","setTimeout","clearInterval","RukaOnInterval","text","fadeIn","location","reload","color","setInterval","api_url","callback"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAyBgBA,WAAAA;QAYAC,cAAAA;QAWAC,eAAAA;QAkBAC,oBAAAA;;;AAhEhB,IAAIC,SAAS,CAAb;AACAC,EAAE,UAAF,EAAcC,GAAd,CAAkB,SAAlB,EAA6B,OAA7B;;AAEA,SAASC,aAAT,GAAyB;AACvB,MAAIC,WAAWH,EAAEI,IAAF,CAAO;AACpBC,UAAM,KADc;AAEpBC,SAAK,sCAFe;AAGpBC,aAAS,iBAASC,UAAT,EAAqB;AAC9B,UAAIA,WAAW,KAAX,KAAqB,IAAzB,EAA+B;AAC7BX,qBAAa,KAAb;AACAD,oBAAY,OAAZ;AACAI,UAAE,UAAF,EAAcS,OAAd;AACAC,mBAAY,YAAW;AACrBb,uBAAa,OAAb;AACAD,sBAAY,KAAZ;AACD,SAHD,EAGE,IAHF;AAIAG,iBAAS,CAAT;AACAY,sBAAcC,cAAd;AACD;AACF;AAfqB,GAAP,CAAf;AAiBD;;AAEM,SAASjB,QAAT,GAAoB;AACzB,MAAIQ,WAAWH,EAAEI,IAAF,CAAO;AACpBC,UAAM,KADc;AAEpBC,SAAK,uCAFe;AAGpBC,aAAS,iBAASC,UAAT,EAAqB;AAC5BR,QAAE,YAAF,EAAgBa,IAAhB,CAAqB,kBAArB;AACAb,QAAE,UAAF,EAAcc,MAAd;AACAJ,iBAAW,YAAW;AAAEK,iBAASC,MAAT;AAAkB,OAA1C,EAA4C,IAA5C;AACH;AAPqB,GAAP,CAAf;AASD;;AAEM,SAASpB,WAAT,CAAqBqB,KAArB,EAA2B;AAChC,MAAId,WAAWH,EAAEI,IAAF,CAAO;AACpBC,UAAM,KADc;AAEpBC,SAAK,mCAAiCW,KAFlB;AAGpBV,aAAS,iBAASC,UAAT,EAAqB;AAC9B,UAAIA,WAAW,KAAX,KAAqB,IAAzB,EAA+B,CAC9B;AACF;AANqB,GAAP,CAAf;AAQD;;AAEM,SAASX,YAAT,CAAsBoB,KAAtB,EAA4B;AACjC,MAAId,WAAWH,EAAEI,IAAF,CAAO;AACpBC,UAAM,KADc;AAEpBC,SAAK,mCAAiCW,KAAjC,GAAuC,KAFxB;AAGpBV,aAAS,iBAASC,UAAT,EAAqB;AAC9B,UAAIA,WAAW,KAAX,KAAqB,IAAzB,EAA+B,CAC9B;AACF;AANqB,GAAP,CAAf;AAQD;;AAED,IAAI,CAACT,MAAL,EAAY;AACVH,cAAY,KAAZ;AACA,MAAIgB,iBAAiBM,YACnB,YAAU;AAAChB;AAAiB,GADT,EAEjB,IAFiB,CAArB;AAGD;;AAEM,SAASJ,iBAAT,CAA2BqB,OAA3B,EAAoCC,QAApC,EAA8C,CAEpD","file":"main-index.3cc9289d.map","sourceRoot":"..","sourcesContent":["\n\nlet RukaOn = 0;\n$('.message').css('display', 'block');\n\nfunction get_Ruka_isOn() {\n  var feedback = $.ajax({\n    type: 'GET',\n    url: 'http://localhost:3000/arduino/rukaOn',\n    success: function(dataResult) {\n    if (dataResult[\"msg\"] == true) {\n      turn_led_off('red');\n      turn_led_on('green');\n      $('.message').fadeOut();\n      setTimeout( function() {\n        turn_led_off('green');\n        turn_led_on('red');\n      },2000);\n      RukaOn = 1;\n      clearInterval(RukaOnInterval);\n    }\n  }\n })\n}\n\nexport function Ruka_off() {\n  var feedback = $.ajax({\n    type: 'GET',\n    url: 'http://localhost:3000/arduino/rukaOff',\n    success: function(dataResult) {\n      $('.m-content').text('Turning off Ruka');\n      $('.message').fadeIn();\n      setTimeout(function() { location.reload()}, 4000);\n  }\n })\n}\n\nexport function turn_led_on(color){\n  var feedback = $.ajax({\n    type: 'GET',\n    url: 'http://localhost:3000/arduino/'+color,\n    success: function(dataResult) {\n    if (dataResult[\"msg\"] == true) {\n    }\n  }\n })\n}\n\nexport function turn_led_off(color){\n  var feedback = $.ajax({\n    type: 'GET',\n    url: 'http://localhost:3000/arduino/'+color+'off',\n    success: function(dataResult) {\n    if (dataResult[\"msg\"] == true) {\n    }\n  }\n })\n}\n\nif (!RukaOn){\n  turn_led_on('red');\n  var RukaOnInterval = setInterval(\n    function(){get_Ruka_isOn();}\n    , 1000);\n}\n\nexport function get_data_from_api(api_url, callback) {\n\n}\n"]}